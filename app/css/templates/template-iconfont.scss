@include font-face("<%= fontName %>", font-files("<%= fontPath %><%= fontName %>.woff","<%= fontPath %><%= fontName %>.woff2","<%= fontPath %><%= fontName %>.svg","<%= fontPath %><%= fontName %>.ttf"), "<%= fontPath %><%= fontName %>.eot");


// @font-face {
//  font-family: "<%= fontName %>";
//  src: url('<%= fontPath %><%= fontName %>.eot');
//  src: url('<%= fontPath %><%= fontName %>.eot?#iefix') format('eot'),
//    url('<%= fontPath %><%= fontName %>.woff') format('woff'),
//    url('<%= fontPath %><%= fontName %>.ttf') format('truetype'),
//    url('<%= fontPath %><%= fontName %>.svg#<%= fontName %>') format('svg');
// }

// @mixin icon-styles {
//  font-family: "<%= fontName %>";
//    -webkit-font-smoothing: antialiased;
//    -moz-osx-font-smoothing: grayscale;
//  font-style: normal;
//  font-variant: normal;
//  font-weight: normal;
//  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
//  text-decoration: none;
//  text-transform: none;
//  display: inline-block;
// }

%icon-styles {
  font-family: "<%= fontName %>";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
  text-decoration: none;
  text-transform: none;
  display: inline-block;
  line-height: 1;
}

@function icon-char($filename) {
  $char: "";
<% _.each(glyphs, function(glyph) { %>
  @if $filename == <%= glyph.fileName %> {
    $char: "\<%= glyph.codePoint %>";
  }<% }); %>

  @return $char;
}

@mixin icon($filename, $insert: before, $extend: true) {
  &:#{$insert} {
    content: icon-char($filename);
  }
}

<% _.each(glyphs, function(glyph) { %>.i-<%= glyph.fileName %> {
  @include icon(<%= glyph.fileName %>);
  @extend %icon-styles;
}
<% }); %>
